class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        if(nums.size()<2){
            return nums;
        }
        vector<int> front(nums.size());
        vector<int> back(nums.size());
        int p=1;
        for(int i=0;i<nums.size();i++){
            p*=nums[i];
            front[i]=p;
        }
        p=1;
        for(int i=nums.size()-1;i>=0;i--){
            p*=nums[i];
            back[i]=p;
        }
        vector<int> ans(nums.size());
        for(int i=0;i<nums.size();i++){
            if(i==0){
                ans[i]=back[i+1];
            }
            else if(i==nums.size()-1){
                ans[i]=front[i-1];
            }
            else{
                ans[i]=front[i-1]*back[i+1];
            }
        }
        return ans;
    }
};