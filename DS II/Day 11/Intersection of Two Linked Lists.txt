/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        int cnt1 = 0;
        int cnt2 = 0;
        ListNode* l1 = headA;
        ListNode* l2 = headB;
        while(l1){
            cnt1++;
            l1 = l1->next;
        }
        while(l2){
            cnt2++;
            l2 = l2->next;
        }
        l1 = headA;
        l2 = headB;
        if(cnt1>cnt2){
            int dif = cnt1 - cnt2;
            while(dif){
                l1 = l1->next;
                dif--;
            }
        }
        if(cnt2>cnt1){
            int dif = cnt2 - cnt1;
            while(dif){
                l2 = l2->next;
                dif--;
            }
        }
        while((l1&&l2)&&(l1!=l2)){
            l1 = l1->next;
            l2 = l2->next;
        }
        return l1;
    }
};