/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
        if(head==NULL || head->next == NULL)
            return NULL;
        
        unordered_map<ListNode*, int> nodeFreq;
        while(head!=NULL)
        {
            if(++nodeFreq[head] > 1)
                return head;
            
            head = head->next;
        }
        
        return NULL;
    }
};
